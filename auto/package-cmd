#!/bin/bash

set -ex

DIR="$( cd "$( dirname "$0" )" && pwd )"

cd "${DIR}/.."

tmp_dir="tmp"
stage_dir="stage/work/"
node_dir="${tmp_dir}/${NODE_VERSION}"
node_archive="node-v${NODE_VERSION}-linux-x64.tar.xz"

mkdir -p "${tmp_dir}"
curl -L -o "${tmp_dir}/SHASUMS256.txt.asc" "https://nodejs.org/dist/v${NODE_VERSION}/SHASUMS256.txt.asc"
if [ ! -f "${tmp_dir}/${node_archive}" ]; then
  curl -L -o "${tmp_dir}/${node_archive}" "https://nodejs.org/dist/v${NODE_VERSION}/${node_archive}"
fi

# Fetch release keys https://github.com/nodejs/node#release-keys
gpg --keyserver pool.sks-keyservers.net --recv-keys 4ED778F539E3634C779C87C6D7062848A1AB005C
gpg --keyserver pool.sks-keyservers.net --recv-keys 94AE36675C464D64BAFA68DD7434390BDBE9B9C5
gpg --keyserver pool.sks-keyservers.net --recv-keys 74F12602B6F1C4E913FAA37AD3A89613643B6201
gpg --keyserver pool.sks-keyservers.net --recv-keys 71DCFD284A79C3B38668286BC97EC7A07EDE3FC1
gpg --keyserver pool.sks-keyservers.net --recv-keys 8FCCA13FEF1D0C2E91008E09770F7A9A5AE15600
gpg --keyserver pool.sks-keyservers.net --recv-keys C4F0DFFF4E8C1A8236409D08E73BC641CC11F4C8
gpg --keyserver pool.sks-keyservers.net --recv-keys C82FA3AE1CBEDC6BE46B9360C43CEC45C17AB93C
gpg --keyserver pool.sks-keyservers.net --recv-keys DD8F2338BAE7501E3DD5AC78C273792F7D83545D
gpg --keyserver pool.sks-keyservers.net --recv-keys A48C2BEE680E841632CD4E44F07496B3EB3C1762
gpg --keyserver pool.sks-keyservers.net --recv-keys 108F52B48DB57BB0CC439B2997B01419BD92F80A
gpg --keyserver pool.sks-keyservers.net --recv-keys B9E2F5981AA6E0CD28160D9FF13993A75599653C

# check integrity of the sha256 sum file
rm -f ${tmp_dir}/SHASUMS256.txt
gpg --batch --decrypt --output ${tmp_dir}/SHASUMS256.txt ${tmp_dir}/SHASUMS256.txt.asc

#check sha256
pushd "${tmp_dir}"
grep " ${node_archive}\$" SHASUMS256.txt | sha256sum -c -
popd

#unpack node
rm -rf "${node_dir}"
mkdir -p "${node_dir}"
tar -xJ -f "${tmp_dir}/${node_archive}" --strip 1 -C "${node_dir}"

#prepare staging dir
rm -rf "${stage_dir}"
mkdir -p "${stage_dir}"
cp -a package.json package-lock.json src/* "${node_dir}"/bin/node "${stage_dir}"

#install deps and create archive
cd "${stage_dir}"
npm ci --production
rm -rf package-lock.json package.json
rm -f ../layer.zip
7za a -mx9 -r ../layer.zip .
